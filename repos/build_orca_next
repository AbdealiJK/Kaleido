#!/bin/bash
# docker run -it -v /media/jmmease/SSD1/chromium_build/repos/:/repos  jonmmease/chromium-builder:0.5 /repos/build_headless

cd /repos/src

# Make output directory
mkdir -p out/Headless

# Write out/Headless/args.gn
echo 'import("//build/args/headless.gn")' > out/Headless/args.gn
echo 'enable_nacl=false' >> out/Headless/args.gn
echo 'symbol_level=0' >> out/Headless/args.gn
echo 'blink_symbol_level=0' >> out/Headless/args.gn
echo 'is_debug=false' >> out/Headless/args.gn
echo 'is_component_build=false' >> out/Headless/args.gn

# 1) Reset headless/BUILD.gn
git checkout HEAD -- headless/BUILD.gn

# 2) Append orca_next section to headless build file (src/headless/BUILD.gn)
echo "
executable(\"orca_next\") {
  sources = [ \"app/orca_next.cc\" ]

  deps = [
    \":headless_shell_lib\",
    \"//skia\",  # we need this to override font render hinting in headless build
  ]
}" >> headless/BUILD.gn

# 3) Copy orca_next/orca_next.cc to src/headless/app/orca_next.cc
cp ../orca_next/orca_next.cc headless/app/

# 4) Perform build, result will be out/Headless/orca_next
gn gen out/Headless
ninja -C out/Headless -j 20 orca_next

# 5) Copy build files
mkdir -p ../build/orca_next/
rm -r ../build/orca_next/*
mkdir -p ../build/orca_next/bin
cp out/Headless/orca_next ../build/orca_next/bin
cp -r out/Headless/swiftshader/ ../build/orca_next/bin

# copy shared libraries
mkdir -p ../build/orca_next/lib/

# /usr/lib/x86_64-linux-gnu/
for SO_FILE in libnss3.so libnssutil3.so libnspr4.so libplc4.so libplds4.so libsqlite3.so.0
do
  cp /usr/lib/x86_64-linux-gnu/$SO_FILE ../build/orca_next/lib/$SO_FILE
done

# /usr/lib/x86_64-linux-gnu/nss
#cp -r /usr/lib/x86_64-linux-gnu/nss ../build/orca_next/lib/
cp /usr/lib/x86_64-linux-gnu/nss/* ../build/orca_next/lib/

# /lib/x86_64-linux-gnu/
for SO_FILE in libexpat.so.1 # libdl.so.2 libpthread.so.0 librt.so.1 libm.so.6 libgcc_s.so.1 libc.so.6
do
  cp /lib/x86_64-linux-gnu/$SO_FILE ../build/orca_next/lib/$SO_FILE
done

# fonts
mkdir -p ../build/orca_next/etc/
cp -r /etc/fonts/ ../build/orca_next/etc/fonts
mkdir -p ../build/orca_next/xdg
cp -r /usr/share/fonts/ ../build/orca_next/xdg/

# launch script
echo "#!/bin/bash
dir_path=\$(dirname \$(readlink -f \$0))

export LD_LIBRARY_PATH=\$dir_path/lib:\$LD_LIBRARY_PATH
export FONTCONFIG_PATH=\$dir_path/etc/fonts
export XDG_DATA_HOME=\$dir_path/xdg

\$dir_path/bin/orca_next --no-sandbox --disable-gpu \$1
" > ../build/orca_next/orca_next
chmod +x ../build/orca_next/orca_next
